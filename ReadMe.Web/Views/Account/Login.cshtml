@using ReadMe.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div id="login">
    <h2 class="title">@ViewBag.Title.</h2>
    <h4 class="title">Use a local account to log in.</h4>

    @using (Html.BeginForm("Login", "Account", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form", id = "login-form"}))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.UserName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Log in" class="btn btn-default"/>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}